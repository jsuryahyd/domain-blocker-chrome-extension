html,
* {
  box-sizing: border-box;
}
html{
  font-size:14px
}

body {
  margin: 0;
  color: white;
  background-color: #333;
  width: 40%;
  min-width: 450px;
  position: relative;
  transition: transform 0.3s ease-in-out;
  overflow-wrap:break-word;
}

input[type="text"] {
  background-color: transparent;
  border: 1px solid cyan;
  padding: 0.5rem 0.75rem;
  border-radius: 2px;
  color: white;
  width: 100%;
}

input:focus {
  outline-color: teal;
}

button {
  background-color: cyan;
  border: none;
  padding: 0.5rem 0.75rem;
  border-radius: 2px;
  cursor: pointer;
}

::-webkit-scrollbar{
  width:5px;
  
}
::-webkit-scrollbar-thumb {
  background-color: #fff;
}

#domain-entry-wrapper {
  width: 50%;
  min-width: 180px;
}

input.domain-to-block {
  flex-basis: calc(80% - 10px);
}
.domain-entry-group:first-of-type input.domain-to-block {
  flex-basis: 100%;
}
.remove-domain {
  flex-basis: calc(20%);
  margin-left: auto;
  /* border-top-left-radius: 0;
	border-bottom-left-radius: 0; */
}
.domain-entry-group {
  display: flex;
  flex-wrap: wrap;
  margin-bottom: 15px;
}

.domain-entry-group input + span {
  flex-basis: 100%;
  order: 3;
}

input.domain-to-block:not(:first-of-type) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

table {
  table-layout: fixed;
  width: 100%;
  border-collapse: collapse;
}

th {
  text-align: left;
}

table th,
table td {
  border: 1px solid #ccc;
  padding: 0.25rem;
  word-wrap: break-word;
}

#siteUrlError,
.domain-input-error {
  color: red;
}
.edit-btn {
  padding: 0;
  width: 100%;
  height: 100%;
  /* color:white; */
  border-radius: 0;
}

.edit-btn:focus,
.edit-btn:active {
  outline: none;
}

#remove-entry {
  background-color: #ff0000;
  color: white;
}

#btns-container {
  margin-top: 15px;
  display: flex;
  justify-content: space-between;
}

#btns-container[data-edit="none"] .edit-mode-btn {
  display: none;
}

#btns-container[data-edit*="id-"] .add-mode-btn {
  display: none;
}

main {
  transition: transform 0.3s ease-in-out;
  padding: 25px;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
}

.analyze-page {
  transition: height 0.3s ease-in-out, transform 0.3s ease-in-out;
}


.block-list::-webkit-scrollbar-thumb {
  background-color: #fff;
}

body[data-route="block-list"] .analyze-page {
  transform: translateX(100%);
  height: 350px; /*min height*/
  overflow: hidden;
}

body[data-route="analyze-page"] .block-list {
  transform: translateX(-100%);
}

body[data-route="analyze-page"] .analyze-page {
  transform: translateX(0);
  min-height: 350px;
}

#analyze_link {
  position: relative;
  bottom: 16px;
  float: right;
}
#block_list_link {
  position: relative;
  bottom: 16px;
  float: left;
}

.nav-link {
  color: #ccc;
}

.nav-link:active,
.nav-link:focus,
.nav-link:hover {
  color: #fff;
}
#domainName {
  margin-top: 0;
  margin-bottom: 0;
  margin-left: 5px;
}

#pageUrl {
  text-align: center;
  margin-top: 0;
  overflow-wrap: break-word;
}
#favicon {
  width: 30px;
}

#favicon[src=""] {
  display: none;
}

#reloadPage {
  display: block;
  margin: auto;
}

#block-page-domains {
  display: none;
}

#page-requests{
  overflow-y: auto;
  max-height:calc(0.62 * 600px);
  padding-right: 5px/*scrollbar width*/;
}
details li{
  max-lines: 2;
  text-overflow: ellipsis;
  width:100%
}

/*
------------
checkbox
------------
*/
.checkbox {
  display: inline-grid;
  grid-template-columns: -webkit-min-content auto;
  grid-template-columns: min-content auto;
  grid-gap: 0.5em;
  font-size: 1rem;
  color: var(--color);
}


.checkbox__control {
  display: inline-grid;
  /* grid-template-columns: 1fr 1fr; */
  width: 1rem;
  height: 1rem;
  border-radius: 0.25rem;
  border: 0.1em solid currentColor;
}
.checkbox__control svg {
  transition: transform 0.1s ease-in 25ms;
  transform: scale(0);
  transform-origin: bottom left;
}

.checkbox__input {
  display: grid;
  grid-template-columns: 1fr 1fr;
  /* grid-template-areas: "checkbox"; */
}
.checkbox__input > * {
  grid-area: checkbox;
}
.checkbox__input input {
  opacity: 0;
  width: 1rem;
  height: 1rem;
}
.checkbox__input input:focus + .checkbox__control {
  box-shadow: 0 0 0 0.05em #fff, 0 0 0.15em 0.1em currentColor;
}
.checkbox__input input:checked + .checkbox__control svg {
  transform: scale(0.9);
}